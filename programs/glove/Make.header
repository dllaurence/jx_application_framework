# To use this file, first run "makemake" and then run "make".
# (makemake is part of the JX distribution)

# Useful directories

JX_ROOT  := ../..

CODEDIR    := ./code
JCOREDIR   := ${JX_ROOT}/include/jcore
JXDIR      := ${JX_ROOT}/include/jx
J2DPLOTDIR := ${JX_ROOT}/include/j2dplot
JEXPRDIR   := ${JX_ROOT}/include/jexpr

JLIBDIR       := ${JX_ROOT}/lib
JCORELIBDIR   := ${JX_ROOT}/libjcore
JXLIBDIR      := ${JX_ROOT}/libjx
J2DPLOTLIBDIR := ${JX_ROOT}/libj2dplot
JEXPRLIBDIR   := ${JX_ROOT}/libjexpr

# Directories to search for header files

SEARCHDIRS := -I${CODEDIR} \
              -I${JCOREDIR} \
              -I${JXDIR} \
              -I${JEXPRDIR} \
              -I${J2DPLOTDIR}

# other constants

GLOVE_VERSION     := 2.0.0
SIGNATURE         := glove
PROG_STRING_FILES := ${filter-out %/glove_menu_strings, \
                       ${shell echo strings/*}}
MENU_STRINGS_FILE := strings/glove_menu_strings

# also defined in .spec

RPM_LIB_PATH := /usr/lib/${SIGNATURE}

# makemake variables

J_STRING_FILES := ${PROG_STRING_FILES}

include ${JX_ROOT}/include/make/jx_constants
include ${JX_ROOT}/include/make/jexpr_constants
include ${JX_ROOT}/include/make/j2dplot_constants
include ${JX_ROOT}/include/make/jx_config

DEPENDFLAGS := ${J_COMPILER_DEPEND_FLAGS} \
               ${J_COMPILE_DEBUG} ${SEARCHDIRS}

TOUCHPATHS := ${JCORELIBDIR} ${JXLIBDIR} ${J2DPLOTLIBDIR} ${JEXPRLIBDIR}

# library dependencies

ifdef J_BUILD_SHARED_LIB
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.so \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.so \
              ${JLIBDIR}/libjexpr-${JEXPR_LIB_VERSION}.so \
              ${JLIBDIR}/libj2dplot-${J2DPLOT_LIB_VERSION}.so
else
  LIB_DEPS := ${JLIBDIR}/libjcore-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjx-${JX_LIB_VERSION}.a \
              ${JLIBDIR}/libjexpr-${JEXPR_LIB_VERSION}.a \
              ${JLIBDIR}/libj2dplot-${J2DPLOT_LIB_VERSION}.a
endif

# make variables

LOADLIBES := -L${JLIBDIR} ${ljexpr} ${lj2dplot} ${J_STD_LIBS}
ifdef J_BUILD_SHARED_LIB
  LDFLAGS := -Xlinker -R${RPM_LIB_PATH}
endif

DEBUG_LOADLIBES := -L${JLIBDIR} \
                   ${J_BEGIN_LINK_STATIC} \
                   ${ljexpr} ${lj2dplot} \
                   ${ljx} ${ljcore} ${J_ACE_LIBS} \
                   ${J_END_LINK_STATIC} \
                   ${J_X11_LIBS} ${J_GCC_LIBS}

#####

.PHONY : default
default: libs glove

.PHONY : Makefiles
Makefiles:

include ${JX_ROOT}/include/make/jx_targets

#
# string data
#

.PHONY : strings
strings:
	@${RM} ${MENU_STRINGS_FILE}
	compile_jstrings ${J_STRING_FILES} \
      --code kGLDefaultStringData ${CODEDIR}/GLStringData.h

.PHONY : stringdb
stringdb:
	compile_jstrings ${J_STRING_FILES} --db glove_us

glove:: strings

.PHONY : menu_strings
menu_strings:
	@${JX_ROOT}/lib/util/extract_menu_strings ${MENU_STRINGS_FILE} ${SIGNATURE} \
     -a ${JXDIR}/jXActionDefs.h ${JXDIR}/JXTEBase.cpp \
     -m ${CODEDIR}/*.cpp ${JXDIR}/*.cpp ${JFSDIR}/*.cpp

#
# required libraries
#

.PHONY : libs
libs:
	@for path in ${TOUCHPATHS}; do ( if cd $$path; then ${MAKE}; fi ) done

#
# install
#

.PHONY : jxinstall
jxinstall: glove
	@strip ${call EXE, glove}
	@cp glove ${JX_INSTALL_ROOT}/

.PHONY : jxuninstall
jxuninstall:
	@${RM} ${JX_INSTALL_ROOT}/glove

#
# source distribution
#

SRC_TAR_FILE := Glove_source-${GLOVE_VERSION}.tgz
SRC_FILE_DIR := ${JX}/programs/glove

.PHONY : source
source:
	@cd ${J_DISTR_TAR_DIR}; \
     tar -czf ${SRC_TAR_FILE} ${filter-out %.o %~, \
                                 ${shell cd ${J_DISTR_TAR_DIR}; echo \
             ${addprefix ${SRC_FILE_DIR}/, \
               README COPYING FAQ Make.* *.jcc *.fd \
               code/* strings/* fitmodule/* test pkg }}}

#
# binary distributions
#

GLOVE := Glove-${GLOVE_VERSION}

GLOVE_RELEASE_TAR_NAME := Glove_${GLOVE_VERSION}.tar

RPM_TAR_FILE  := ${RPM_SRC_DIR}/Glove_${GLOVE_VERSION}.tar
RPM_SPEC_FILE := ./pkg/glove.spec

DEB_CTRL_FILE := ./pkg/glove.debctrl
DEB_PKG_FILE  := glove_${GLOVE_VERSION}_i386.deb

.PHONY : release_shared
release: pre_build_pkgs libs
	@${RM} glove; ${MAKE} glove; strip ${call EXE, glove}
	@${MAKE} GLOVE_DISTR_TAR_FILE=${GLOVE_RELEASE_TAR_NAME} distr_sub

.PHONY : release_static
release_static: pre_build_pkgs static
	@${MAKE} GLOVE_DISTR_TAR_FILE=${GLOVE_RELEASE_TAR_NAME} distr_sub

# distr_sub (GLOVE_DISTR_TAR_FILE)

.PHONY : distr_sub
distr_sub: menu_strings
	@${MAKE} PKG_PATH=${GLOVE} DOC_NAME="Glove" DOC_HEADER=code/GLHelpText.h init_tarball
	@ln -s ../${call EXE,glove} ${GLOVE}/${call EXE,glove}
	@ln -s ../fitmodule         ${GLOVE}/fitmodule
	@${MAKE} PKG_PATH=${GLOVE} SOURCE_TAR_NAME=${GLOVE_DISTR_TAR_FILE} build_pkgs

#
# debugging version
#

.PHONY : debug
debug: staticACE libs
	@${RM} glove
	@${MAKE} "LOADLIBES=${DEBUG_LOADLIBES}" glove

#
# static binary
#

.PHONY : static
static: debug
	@${J_STRIP_DEBUG} ${call EXE, glove}

#
# personal install
#

.PHONY : personal
personal: static
	@mv glove ${HOME}/bin/

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.

# This portion of the file was automatically generated by Code Crusader.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# build libraries before main result

# DO NOT DELETE THIS LINE -- Code Crusader depends on it.
